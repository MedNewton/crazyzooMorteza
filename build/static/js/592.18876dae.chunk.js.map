{"version":3,"file":"static/js/592.18876dae.chunk.js","mappings":"oNAAA,IAAAA,EAAAC,EAAA,OAEaC,EAAAA,mBAAqBF,EAAAG,aAErBD,EAAAA,iBAAmB,CAC9BE,MAAO,kB,iFCLTC,aAAAJ,EAAA,OAAAC,E,6MCAAI,EAAAL,EAAA,OACAD,EAAAC,EAAA,OAEAM,EAAAN,EAAA,OAEAO,EAAAP,EAAA,OAEaQ,EAAU,SAAAC,GAAAC,EAAAF,EAAAC,GAAA,IAAAE,EAAAC,EAAAJ,GAYrB,SAAAA,EAAYK,GAAuB,IAAAC,EAEoB,OAFpBC,EAAA,KAAAP,IACjCM,EAAAH,EAAAK,KAAA,KAAMH,IANDI,OAAS,IAAIZ,EAAAa,aAEbJ,EAAAK,SAAWZ,EAAAa,mBAKhBN,EAAKK,UAAe,OAAJN,QAAI,IAAJA,OAAI,EAAJA,EAAMM,WAAYZ,EAAAa,mBAAmBN,CACvD,CAVC,OAUAO,EAAAb,EAAA,EAAAc,IAAA,OAAAC,MAEY,W,8HACX,O,SAAM,KAAKC,aAAY,wBAAAC,EAAAC,OAAA,GAAAC,EAAA,S,GACxB,CAAAL,IAAA,OAAAC,MAEM,WACLK,cAAc,KAAKC,YACrB,GAAC,CAAAP,IAAA,KAAAC,MAEM,SAAGO,EAAeC,GACvB,KAAKd,OAAOe,GAAGF,EAAOC,EACxB,GAAC,CAAAT,IAAA,OAAAC,MAEM,SAAKO,EAAeC,GACzB,KAAKd,OAAOgB,KAAKH,EAAOC,EAC1B,GAAC,CAAAT,IAAA,MAAAC,MAEM,SAAIO,EAAeC,GACxB,KAAKd,OAAOiB,IAAIJ,EAAOC,EACzB,GAAC,CAAAT,IAAA,iBAAAC,MAEM,SAAeO,EAAeC,GACnC,KAAKd,OAAOkB,eAAeL,EAAOC,EACpC,GAAC,CAAAT,IAAA,aAAAC,MAIa,W,yIACZ,KAAKM,YAAcO,aAAY,kBAAMC,EAAKlC,OAAO,GAAEJ,EAAAuC,cAAc,KAAKnB,WAAW,wBAAAoB,EAAAb,OAAA,GAAAc,EAAA,S,GAClF,CAAAlB,IAAA,QAAAC,MAEO,WACN,KAAKN,OAAOwB,KAAKlC,EAAAmC,iBAAiBvC,MACpC,IAAC,EAAAmB,IAAA,OAAAC,MAhDD,SAAkBV,G,oIAEhB,OADM8B,EAAY,IAAInC,EAAUK,GAAK+B,EAAAC,KAAA,EAC/BF,EAAUG,OAAM,cAAAF,EAAAG,OAAA,SACfJ,GAAS,wBAAAC,EAAAlB,OAAA,GAAAsB,EAAA,I,KACjBxC,CAAA,CALoB,CAAQF,EAAA2C,YAA/BhD,EAAAA,UAAAO,C,uFCPA0C,EAAA9C,aAAAJ,EAAA,OAAAC,GACAiD,EAAA9C,aAAAJ,EAAA,OAAAC,GACAiD,EAAA9C,aAAAJ,EAAA,OAAAC,E,6KCFA,IAMsBgD,EAAW,SAAAE,GAAAzC,EAAAuC,EAAAE,GAAA,IAAAxC,EAAAC,EAAAqC,GAG/B,SAAAA,EAAYpC,GAAuB,OAAAE,EAAA,KAAAkC,GAAAtC,EAAAK,KAAA,KAEnC,CAAC,OAAAK,EAAA4B,EAAA,CAL8B,CANjCjD,EAAA,OAMyCoD,SAAzCnD,EAAAA,WAAAgD,C,iFCNA7C,aAAAJ,EAAA,OAAAC,E,+lDCMO,SAASoD,IAAsB,IAAVC,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EACjC,OAAyB,MAArBG,WAAWC,QAAmD,MAAjCD,WAAWC,OAAON,YAC1CK,WAAWC,OAAON,YAAYC,GAEhC,IAAIM,WAAWN,EACxB,CCVO,SAASO,EAAOC,EAAQN,GACxBA,IACHA,EAASM,EAAOC,QAAO,SAACC,EAAKC,GAAI,OAAKD,EAAMC,EAAKT,MAAM,GAAE,IAE3D,IAEwBU,EAFlBC,EAASd,EAAYG,GACvBY,EAAS,EAAEC,GAAAC,EAAAA,EAAAA,GACGR,GAAM,IAAxB,IAAAO,EAAAE,MAAAL,EAAAG,EAAAG,KAAAC,MAA0B,KAAfC,EAAGR,EAAA3C,MACZ4C,EAAOQ,IAAID,EAAKN,GAChBA,GAAUM,EAAIlB,MAChB,CAAC,OAAAoB,GAAAP,EAAAQ,EAAAD,EAAA,SAAAP,EAAAS,GAAA,CACD,OAAOX,CACT,C,eCVA,SAASY,EAAYC,EAAMC,EAAQC,EAAQC,GACzC,MAAO,CACLH,KAAAA,EACAC,OAAAA,EACAG,QAAS,CACPJ,KAAAA,EACAC,OAAAA,EACAC,OAAAA,GAEFG,QAAS,CAAEF,OAAAA,GAEf,CACA,IAAMG,EAASP,EAAY,OAAQ,KAAK,SAAAQ,GAEtC,MAAO,IADS,IAAIC,YAAY,QACXL,OAAOI,EAC9B,IAAG,SAAAE,GAED,OADgB,IAAIC,aACLR,OAAOO,EAAIE,UAAU,GACtC,IACMC,EAAQb,EAAY,QAAS,KAAK,SAAAQ,GAEtC,IADA,IAAID,EAAS,IACJO,EAAI,EAAGA,EAAIN,EAAI/B,OAAQqC,IAC9BP,GAAUQ,OAAOC,aAAaR,EAAIM,IAEpC,OAAOP,CACT,IAAG,SAAAG,GAGD,IADA,IAAMF,EAAMlC,GADZoC,EAAMA,EAAIE,UAAU,IACQnC,QACnBqC,EAAI,EAAGA,EAAIJ,EAAIjC,OAAQqC,IAC9BN,EAAIM,GAAKJ,EAAIO,WAAWH,GAE1B,OAAON,CACT,IAUA,GATWU,EAAAA,EAAAA,GAAA,CACTC,KAAMZ,EACN,QAASA,EACTa,IAAKC,EAAAA,GAAAA,OACLC,OAAQT,EACRA,MAAOA,EACPU,OAAQV,GACLQ,EAAAA,ICzCE,SAASG,EAAWjB,GAA2B,IAAnBkB,EAAQjD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,OACtCkD,EAAOL,EAAMI,GACnB,IAAKC,EACH,MAAM,IAAIC,MAAM,yBAAD7C,OAA2B2C,EAAQ,MAEpD,MAAkB,SAAbA,GAAoC,UAAbA,GAA8C,MAArB9C,WAAWC,QAA4C,MAA1BD,WAAWC,OAAOgD,KAG7FF,EAAKpB,QAAQF,OAAO,GAADtB,OAAK4C,EAAKxB,QAAMpB,OAAKyB,IAFtC5B,WAAWC,OAAOgD,KAAKrB,EAAQ,OAG1C,CCTO,SAASsB,EAASC,GAA0B,IAAnBL,EAAQjD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,OACnCkD,EAAOL,EAAMI,GACnB,IAAKC,EACH,MAAM,IAAIC,MAAM,yBAAD7C,OAA2B2C,EAAQ,MAEpD,MAAkB,SAAbA,GAAoC,UAAbA,GAA8C,MAArB9C,WAAWC,QAA4C,MAA1BD,WAAWC,OAAOgD,KAG7FF,EAAKrB,QAAQF,OAAO2B,GAAOlB,UAAU,GAFnCjC,WAAWC,OAAOgD,KAAKE,EAAMC,OAAQD,EAAME,WAAYF,EAAMG,YAAYJ,SAAS,OAG7F,C","sources":["../../../../src/constants/heartbeat.ts","../../../../src/constants/index.ts","../../../src/heartbeat.ts","../../../src/index.ts","../../../../src/types/heartbeat.ts","../../../../src/types/index.ts","../node_modules/@wagmi/connectors/node_modules/uint8arrays/esm/src/alloc.js","../node_modules/@wagmi/connectors/node_modules/uint8arrays/esm/src/concat.js","../node_modules/@wagmi/connectors/node_modules/uint8arrays/esm/src/util/bases.js","../node_modules/@wagmi/connectors/node_modules/uint8arrays/esm/src/from-string.js","../node_modules/@wagmi/connectors/node_modules/uint8arrays/esm/src/to-string.js"],"sourcesContent":[null,null,null,null,null,null,"export function alloc(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.alloc != null) {\n    return globalThis.Buffer.alloc(size);\n  }\n  return new Uint8Array(size);\n}\nexport function allocUnsafe(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {\n    return globalThis.Buffer.allocUnsafe(size);\n  }\n  return new Uint8Array(size);\n}","import { allocUnsafe } from './alloc.js';\nexport function concat(arrays, length) {\n  if (!length) {\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0);\n  }\n  const output = allocUnsafe(length);\n  let offset = 0;\n  for (const arr of arrays) {\n    output.set(arr, offset);\n    offset += arr.length;\n  }\n  return output;\n}","import { bases } from 'multiformats/basics';\nimport { allocUnsafe } from '../alloc.js';\nfunction createCodec(name, prefix, encode, decode) {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: { decode }\n  };\n}\nconst string = createCodec('utf8', 'u', buf => {\n  const decoder = new TextDecoder('utf8');\n  return 'u' + decoder.decode(buf);\n}, str => {\n  const encoder = new TextEncoder();\n  return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n  let string = 'a';\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i]);\n  }\n  return string;\n}, str => {\n  str = str.substring(1);\n  const buf = allocUnsafe(str.length);\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n});\nconst BASES = {\n  utf8: string,\n  'utf-8': string,\n  hex: bases.base16,\n  latin1: ascii,\n  ascii: ascii,\n  binary: ascii,\n  ...bases\n};\nexport default BASES;","import bases from './util/bases.js';\nexport function fromString(string, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return globalThis.Buffer.from(string, 'utf8');\n  }\n  return base.decoder.decode(`${ base.prefix }${ string }`);\n}","import bases from './util/bases.js';\nexport function toString(array, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8');\n  }\n  return base.encoder.encode(array).substring(1);\n}"],"names":["time_1","require","exports","FIVE_SECONDS","pulse","__exportStar","events_1","types_1","constants_1","HeartBeat","_types_1$IHeartBeat","_inherits","_super","_createSuper","opts","_this","_classCallCheck","call","events","EventEmitter","interval","HEARTBEAT_INTERVAL","_createClass","key","value","initialize","_context","stop","_callee","clearInterval","intervalRef","event","listener","on","once","off","removeListener","setInterval","_this2","toMiliseconds","_context2","_callee2","emit","HEARTBEAT_EVENTS","heartbeat","_context3","next","init","abrupt","_callee3","IHeartBeat","tslib_1","_events_1$IEvents","IEvents","allocUnsafe","size","arguments","length","undefined","globalThis","Buffer","Uint8Array","concat","arrays","reduce","acc","curr","_step","output","offset","_iterator","_createForOfIteratorHelper","s","n","done","arr","set","err","e","f","createCodec","name","prefix","encode","decode","encoder","decoder","string","buf","TextDecoder","str","TextEncoder","substring","ascii","i","String","fromCharCode","charCodeAt","_objectSpread","utf8","hex","bases","latin1","binary","fromString","encoding","base","Error","from","toString","array","buffer","byteOffset","byteLength"],"sourceRoot":""}